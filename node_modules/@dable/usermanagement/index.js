const stripe = require('stripe')('sk_test_51Js6TqI2eoRjhsHUBUM3hgIAbALchbSeFa3mpIiYKh9q4L4IofzBmuWyXNu7NdPUQH3wCvBGRSfYPQq5Vr2Z2vri003iNj621y');
const {Deta} = require('deta')
const deta = Deta('b0bj02xu_yJxh7WpXiJEcGiZkc2GZtW4aJ59UcMs8');
const crypto = require('crypto')
const customerDatabase = deta.Base("Customers")

async function checkForCurrentAccount(theEmail){
    var customer = await customerDatabase.fetch({'Email':theEmail})
    if(customer.count > 0){
        console.log(false)
        return false
    }else{
        console.log(true)
        return true
    }
}

exports.newUser = function(theEmail, thePhoneNumber,theName,thePassword){
    return new Promise(async(resolve)  =>{
        try{
            if(await checkForCurrentAccount(theEmail) == true ){
                const customer = await stripe.customers.create({
                    email: theEmail,
                    name: theName,
                    phone:thePhoneNumber
                    
                });
                var Data = {"Name":theName,"Email":theEmail, "Password":thePassword, "Cart":null }
                await customerDatabase.put(Data, customer.id)
                
                var ReturnValue = {"created":true, "userSpecificAuthKey":customer.id}
                resolve(ReturnValue)
            }else{
                var ReturnValue = {"created":false}
                resolve(ReturnValue)
            }
            
        }catch(err){
            console.log(err)
        }
        
    })
}
exports.logUserIn = function(theEmail,thePassword){
    return new Promise(async(resolve)  =>{
        try{
            var customer = await customerDatabase.fetch({'Email':theEmail})
            if(customer.items[0].Password == thePassword){
                var ReturnValue = {"signin":true, "userSpecificAuthKey":customer.items[0].key}
                resolve(ReturnValue)
            }else{
                var ReturnValue = {"signin":false}
                resolve(ReturnValue)
            }
        }catch(err){
            console.log(err)
        }
        
    })
}
exports.addToCart = function(userId){
    return new Promise(async(resolve)=>{
        var customer = await customerDatabase.get(userId)

    })
}